package gui;

import account.Account;
import application.ApplicationManager;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import exceptions.*;
import statement.MonthlyStatement;
import statement.Statement;

import javax.swing.*;
import java.awt.*;

public class StatementOverview extends JFrame {


    private ApplicationManager applicationManager;
    public Account account;
    private JPanel statementOverviewPanel;
    private JTextField yearTextField;
    private JTextField monthTextField;
    private JButton showStatementButton;
    private JButton cancelButton;
    private JLabel accountNameLabel;
    private JLabel accountNumberLabel;

    public StatementOverview(ApplicationManager applicationManager, Account account) {
        this.applicationManager = applicationManager;
        this.account = account;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("FinanceManager");
        setSize(600, 400);
        setVisible(true);
        setContentPane(statementOverviewPanel);

        accountNameLabel.setText(account.getAccountName());
        accountNumberLabel.setText(Long.toString(account.getId()));

        cancelButton.addActionListener(e -> {
            dispose();
            new AccountOverview(applicationManager, account);
        });

        showStatementButton.addActionListener(e -> {
            Statement statement;
            try {
                if (monthTextField.getText().equals("")) {
                    if (yearTextField.getText().equals("")) {
                        statement = applicationManager.getStatementManager().getOverallStatement(account);
                    } else {
                        statement = applicationManager.getStatementManager().getYearlyStatement(Integer.parseInt(yearTextField.getText()), account);
                    }
                } else {
                    statement = applicationManager.getStatementManager().getMonthlyStatement(Integer.parseInt(yearTextField.getText()), Integer.parseInt(monthTextField.getText()), account);
                }
                dispose();
                new StatementDisplay(applicationManager, account, statement);
            } catch (InvalidStatementException | NoStatementFoundException | NoMonthlyStatementsFoundException | NoYearlyStatementsFoundException | NoOverallStatementFoundException ex) {
                ex.printStackTrace();
                JOptionPane.showMessageDialog(null, ex.getMessage());
            }
        });


    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        statementOverviewPanel = new JPanel();
        statementOverviewPanel.setLayout(new GridLayoutManager(9, 6, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Year");
        statementOverviewPanel.add(label1, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        yearTextField = new JTextField();
        statementOverviewPanel.add(yearTextField, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final JLabel label2 = new JLabel();
        label2.setText("Month");
        statementOverviewPanel.add(label2, new GridConstraints(4, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        monthTextField = new JTextField();
        statementOverviewPanel.add(monthTextField, new GridConstraints(5, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        final Spacer spacer1 = new Spacer();
        statementOverviewPanel.add(spacer1, new GridConstraints(8, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer2 = new Spacer();
        statementOverviewPanel.add(spacer2, new GridConstraints(6, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer3 = new Spacer();
        statementOverviewPanel.add(spacer3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer4 = new Spacer();
        statementOverviewPanel.add(spacer4, new GridConstraints(2, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer5 = new Spacer();
        statementOverviewPanel.add(spacer5, new GridConstraints(7, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer6 = new Spacer();
        statementOverviewPanel.add(spacer6, new GridConstraints(7, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final JLabel label3 = new JLabel();
        label3.setText("AccountName:");
        statementOverviewPanel.add(label3, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        accountNameLabel = new JLabel();
        accountNameLabel.setText("Label");
        statementOverviewPanel.add(accountNameLabel, new GridConstraints(1, 2, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label4 = new JLabel();
        label4.setText("AccountNumber:");
        statementOverviewPanel.add(label4, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        accountNumberLabel = new JLabel();
        accountNumberLabel.setText("Label");
        statementOverviewPanel.add(accountNumberLabel, new GridConstraints(1, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        cancelButton = new JButton();
        cancelButton.setText("Cancel");
        statementOverviewPanel.add(cancelButton, new GridConstraints(7, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        showStatementButton = new JButton();
        showStatementButton.setText("Show Statement");
        statementOverviewPanel.add(showStatementButton, new GridConstraints(7, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final JLabel label5 = new JLabel();
        label5.setText("Please enter month as integer number");
        statementOverviewPanel.add(label5, new GridConstraints(3, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return statementOverviewPanel;
    }

}
