package gui;

import account.Account;
import account.AccountBuilder;
import account.Owner;
import application.ApplicationManager;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import exceptions.AccountAlreadyExistsException;
import exceptions.InvalidIdException;

import javax.swing.*;
import java.awt.*;

public class AccountOverview extends JFrame {
    private JLabel nameLabel;
    private JLabel idLabel;
    private JLabel ownerLabel;
    private JLabel sumLabel;
    private JButton viewStatementsButton;
    private JPanel accountOverviewPanel;
    private JButton createTransactionButton;

    private ApplicationManager applicationManager;
    public Account account;


    public AccountOverview(ApplicationManager applicationManager, Account account) {
        this.applicationManager = applicationManager;
        this.account = account;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("FinanceManager");
        setSize(400, 200);
        setVisible(true);
        setContentPane(accountOverviewPanel);

        nameLabel.setText(account.getAccountName());
        idLabel.setText(Long.toString(account.getId()));
        ownerLabel.setText(account.getOwner().getFullName());
        if (account.getBalance() > 0) {
            sumLabel.setForeground(Color.GREEN);
        } else if (account.getBalance() < 0) {
            sumLabel.setForeground(Color.RED);
        }
        sumLabel.setText(account.getBalance() + " â‚¬");

        createTransactionButton.addActionListener(e -> {
            new CreateTransaction(applicationManager, account);
            dispose();
        });

        viewStatementsButton.addActionListener(e -> {
            new StatementOverview(applicationManager, account);
            dispose();
        });

    }

    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        accountOverviewPanel = new JPanel();
        accountOverviewPanel.setLayout(new GridLayoutManager(7, 6, new Insets(0, 0, 0, 0), -1, -1));
        nameLabel = new JLabel();
        nameLabel.setText("Label");
        accountOverviewPanel.add(nameLabel, new GridConstraints(1, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        idLabel = new JLabel();
        idLabel.setText("Label");
        accountOverviewPanel.add(idLabel, new GridConstraints(1, 2, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        ownerLabel = new JLabel();
        ownerLabel.setText("Label");
        accountOverviewPanel.add(ownerLabel, new GridConstraints(1, 4, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sumLabel = new JLabel();
        sumLabel.setText("Label");
        accountOverviewPanel.add(sumLabel, new GridConstraints(3, 2, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        viewStatementsButton = new JButton();
        viewStatementsButton.setText("View Statements");
        accountOverviewPanel.add(viewStatementsButton, new GridConstraints(5, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        createTransactionButton = new JButton();
        createTransactionButton.setText("Create Transaction");
        accountOverviewPanel.add(createTransactionButton, new GridConstraints(5, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer1 = new Spacer();
        accountOverviewPanel.add(spacer1, new GridConstraints(6, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer2 = new Spacer();
        accountOverviewPanel.add(spacer2, new GridConstraints(4, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer3 = new Spacer();
        accountOverviewPanel.add(spacer3, new GridConstraints(0, 2, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer4 = new Spacer();
        accountOverviewPanel.add(spacer4, new GridConstraints(1, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer5 = new Spacer();
        accountOverviewPanel.add(spacer5, new GridConstraints(1, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer6 = new Spacer();
        accountOverviewPanel.add(spacer6, new GridConstraints(2, 3, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return accountOverviewPanel;
    }

}
