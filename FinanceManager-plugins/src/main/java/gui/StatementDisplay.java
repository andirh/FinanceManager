package gui;

import account.Account;
import application.ApplicationManager;
import com.intellij.uiDesigner.core.GridConstraints;
import com.intellij.uiDesigner.core.GridLayoutManager;
import com.intellij.uiDesigner.core.Spacer;
import exceptions.InvalidStatementException;
import mapping.StatementDataMapper;
import statement.Statement;

import javax.swing.*;
import java.awt.*;

public class StatementDisplay extends JFrame {

    private ApplicationManager applicationManager;
    public Account account;
    private JPanel statementDisplay;
    private JTextPane statementTextPane;
    private JLabel typeLabel;
    private JLabel dateLabel;
    private JLabel sumLabel;
    private JButton backToOverviewButton;
    private StatementDataMapper mapper;


    public StatementDisplay(ApplicationManager applicationManager, Account account, Statement statement) {
        this.applicationManager = applicationManager;
        this.account = account;
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setTitle("FinanceManager");
        setSize(400, 400);
        setVisible(true);
        setContentPane(statementDisplay);
        mapper = new StatementDataMapper();

        typeLabel.setText("Statement:");
        String[] dateContainer = statement.getStatementId().split("-");
        if (!dateContainer[0].equals("O")) {
            if (dateContainer[1].toCharArray().length == 2) {
                dateLabel.setText(dateContainer[1] + "/" + dateContainer[0]);
            } else {
                dateLabel.setText(dateContainer[0]);
            }
        } else {
            dateLabel.setText("Overall");
        }

        try {
            statementTextPane.setText(mapper.mapStatementToCsvString(statement));
            statementTextPane.setEnabled(false);
            sumLabel.setText(applicationManager.getStatementManager().getSumOfStatement(statement) + "â‚¬");

        } catch (InvalidStatementException ex) {
            JOptionPane.showMessageDialog(null, ex.getMessage());
        }

        backToOverviewButton.addActionListener(e -> {
            dispose();
            new StatementOverview(applicationManager, account);
        });

    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        statementDisplay = new JPanel();
        statementDisplay.setLayout(new GridLayoutManager(8, 6, new Insets(0, 0, 0, 0), -1, -1));
        final Spacer spacer1 = new Spacer();
        statementDisplay.add(spacer1, new GridConstraints(3, 2, 2, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, null, null, null, 0, false));
        typeLabel = new JLabel();
        typeLabel.setText("Label");
        statementDisplay.add(typeLabel, new GridConstraints(1, 1, 1, 2, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        statementTextPane = new JTextPane();
        statementDisplay.add(statementTextPane, new GridConstraints(3, 1, 2, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_BOTH, GridConstraints.SIZEPOLICY_WANT_GROW, GridConstraints.SIZEPOLICY_WANT_GROW, null, new Dimension(150, 50), null, 0, false));
        backToOverviewButton = new JButton();
        backToOverviewButton.setText("Back To Overview");
        statementDisplay.add(backToOverviewButton, new GridConstraints(6, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_CAN_SHRINK | GridConstraints.SIZEPOLICY_CAN_GROW, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        dateLabel = new JLabel();
        dateLabel.setText("Label");
        statementDisplay.add(dateLabel, new GridConstraints(1, 3, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        sumLabel = new JLabel();
        sumLabel.setText("Label");
        statementDisplay.add(sumLabel, new GridConstraints(3, 4, 1, 1, GridConstraints.ANCHOR_WEST, GridConstraints.FILL_NONE, GridConstraints.SIZEPOLICY_FIXED, GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        final Spacer spacer2 = new Spacer();
        statementDisplay.add(spacer2, new GridConstraints(3, 0, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer3 = new Spacer();
        statementDisplay.add(spacer3, new GridConstraints(3, 5, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_HORIZONTAL, GridConstraints.SIZEPOLICY_WANT_GROW, 1, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer4 = new Spacer();
        statementDisplay.add(spacer4, new GridConstraints(5, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer5 = new Spacer();
        statementDisplay.add(spacer5, new GridConstraints(2, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer6 = new Spacer();
        statementDisplay.add(spacer6, new GridConstraints(0, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
        final Spacer spacer7 = new Spacer();
        statementDisplay.add(spacer7, new GridConstraints(7, 1, 1, 1, GridConstraints.ANCHOR_CENTER, GridConstraints.FILL_VERTICAL, 1, GridConstraints.SIZEPOLICY_WANT_GROW, new Dimension(10, 10), new Dimension(10, 10), new Dimension(10, 10), 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return statementDisplay;
    }

}
